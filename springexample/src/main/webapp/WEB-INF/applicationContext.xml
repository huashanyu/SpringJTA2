<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:component-scan base-package="co.uk.escape.*" />
	<tx:annotation-driven />
	<tx:jta-transaction-manager />


	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
		<property name="transactionTimeout" value="600" />
	</bean>

 	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" 
 					depends-on="atomikosTransactionManager,atomikosUserTransaction">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean> 


<!-- 	<bean id="appServlet" class="co.uk.escape.servlet.AppServlet"/> -->


<!--  	<bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">  -->
<!-- 		<property name="entityManagerFactory" ref="entityManagerFactoryA" />  -->
<!-- 	</bean>   -->

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
		<property name="databasePlatform"
			value="org.eclipse.persistence.platform.database.MySQLPlatform" />
		<property name="generateDdl" value="false" />
		<property name="showSql" value="true" />
	</bean>


	<bean id='entityManagerFactoryA' class='org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean'>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="persistenceUnitName" value="PersistenceUnitA" />
		<property name='dataSource' ref='dataSourceA' />
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
	</bean>


<!-- 	<bean id='entityManagerFactoryB' -->
<!-- 		class='org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean'> -->
<!-- 		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" /> -->
<!-- 		<property name="persistenceUnitName" value="PersistenceUnitB" /> -->
<!-- 		<property name='dataSource' ref='dataSourceB' /> -->
<!-- 		<property name="jpaPropertyMap"> -->
<!-- 			<map> -->
<!-- 				<entry key="eclipselink.weaving" value="false" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->


<!--  	<bean id='dataSourceA'
		class='org.springframework.jdbc.datasource.DriverManagerDataSource'>
		<property name='driverClassName' value='com.mysql.jdbc.Driver' />
		<property name='url' value='jdbc:mysql://localhost:3306/companyA' />
		<property name='username' value='user' />
		<property name='password' value='user' />
	</bean> --> 
	
 	<bean id='dataSourceA' class='com.atomikos.jdbc.AtomikosDataSourceBean' init-method="init" destroy-method="close"> 
		<property name="uniqueResourceName"><value>DataSourceA</value></property>
		<property name="xaDataSourceClassName"><value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value></property> 
		<property name="xaProperties"> 
			<props> 		
					<prop key="pinGlobalTxToPhysicalConnection">true</prop> 
					<prop key="databaseName">companyA</prop> 
					<prop key="serverName">localhost</prop> 
					<prop key="port">3306</prop> 
					<prop key="user">user</prop> 	
					<prop key="password">user</prop> 
					<prop key="url">jdbc:mysql://localhost:3306/companyA</prop> 
			</props> 
		</property> 	
		<property name="minPoolSize"><value>1</value></property> 
		<property name="maxPoolSize"><value>30</value></property> 
	</bean> 
	
	

<!--  	<bean id='dataSourceB'
		class='org.springframework.jdbc.datasource.DriverManagerDataSource'>
		<property name='driverClassName' value='com.mysql.jdbc.Driver' />
		<property name='url' value='jdbc:mysql://localhost:3306/companyA' />
		<property name='username' value='user' />
		<property name='password' value='user' />
	</bean>  -->
	
<!--  		<bean id='dataSourceB' class='com.atomikos.jdbc.AtomikosDataSourceBean' init-method="init" destroy-method="close">  -->
<!-- 		<property name="uniqueResourceName"> -->
<!-- 			<value>DataSourceB</value> -->
<!-- 		</property> -->
<!-- 		<property name="xaDataSourceClassName">  -->
<!-- 			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>  -->
<!-- 		</property>  -->
<!-- 		<property name="xaProperties">  -->
<!-- 			<props>  -->
<!-- 					<prop key="logXaCommands">true</prop>  -->
<!-- 					<prop key="pinGlobalTxToPhysicalConnection">true</prop>  -->
<!-- 					<prop key="databaseName">companyB</prop>  -->
<!-- 					<prop key="serverName">localhost</prop>  -->
<!-- 					<prop key="port">3306</prop>  -->
<!-- 					<prop key="user">user</prop> 	 -->
<!-- 					<prop key="password">user</prop>  -->
<!-- 					<prop key="url">jdbc:mysql://localhost:3306/companyB</prop>  -->
<!-- 		</props> </property> 	 -->
<!-- 		<property name="minPoolSize"> <value>1</value> </property>  -->
<!-- 		<property name="maxPoolSize"> <value>30</value> </property>  -->
<!-- 	</bean> -->
	

	<!-- 
	<bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean" 
		init-method="init" destroy-method="close"> 
		<property name="uniqueResourceName">
			<value>DataSourceA</value>
		</property> 
		<property name="xaDataSourceClassName"> 
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value> 
		</property> 
		<property name="xaProperties"> 
			<props> <prop key="databaseName">companyA</prop> 
					<prop key="serverName">localhost</prop> 
					<prop key="port">3306</prop> 
					<prop key="user">user</prop> 	
					<prop key="password">user</prop> 
					<prop key="url">jdbc:mysql://localhost:3306/companyA</prop> 
		</props> </property> 
		
		<property name="minPoolSize"> <value>1</value> </property> 
		</bean> 
		
		
		<bean id="dataSourceB" class="com.atomikos.jdbc.AtomikosDataSourceBean" 
		init-method="init" destroy-method="close"> <property name="uniqueResourceName"><value>DataSourceB</value></property> 
		<property name="xaDataSourceClassName"> <value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value> 
		</property> <property name="xaProperties"> <props> <prop key="databaseName">companyB</prop> 
		<prop key="serverName">localhost</prop> <prop key="port">3306</prop> <prop 
		key="user">user</prop> <prop key="password">user</prop> <prop key="url">jdbc:mysql://localhost:3306/companyB</prop> 
		</props> </property> <property name="minPoolSize"> <value>1</value> </property> 
		</bean> <bean id="entityManagerFactoryA" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="persistenceXmlLocation"><value>classpath*:persistence.xml</value></property> 
		<property name="persistenceUnitName" value="PersistenceUnitA" /> <property 
		name="dataSource" ref="dataSourceA" /> <property name="jpaVendorAdapter"> 
		<property name="jpaProperties"> <props><prop key="eclipselink.session.customizer">co.uk.escape.TransactionSessionCustomizer</prop></props> 
		<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"> 
		<property name="showSql" value="true" /> <property name="databasePlatform" 
		value="org.eclipse.persistence.platform.database.MySQLPlatform" /> </bean> 
		</property> </bean> <bean id="entityManagerFactoryB" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="persistenceXmlLocation"><value>classpath*:persistence.xml</value></property> 
		<property name="persistenceUnitName" value="PersistenceUnitB" /> <property 
		name="dataSource" ref="dataSourceB" /> <property name="jpaVendorAdapter"> 
		<property name="jpaProperties"> <props><prop key="eclipselink.session.customizer">co.uk.escape.TransactionSessionCustomizer</prop></props> 
		<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"> 
		<property name="showSql" value="true" /> <property name="databasePlatform" 
		value="org.eclipse.persistence.platform.database.MySQLPlatform" /> </bean> 
		</property> </bean> <bean id="entityManagerFactoryB" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="jpaProvider" value="eclipselink" /> <property name="persistenceXmlLocation"><value>classpath*:persistence.xml</value></property> 
		<property name="persistenceUnitName" value="PersistenceUnitB" /> <property 
		name="dataSource" ref="dataSourceB" /> <property name="jpaVendorAdapter"> 
		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> 
		<property name="showSql" value="true" /> <property name="databasePlatform" 
		value="org.hibernate.dialect.MySQL5InnoDBDialect" /> </bean> </property> 
		</bean> -->




</beans>